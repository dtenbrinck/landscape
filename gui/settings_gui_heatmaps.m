function settings_gui_heatmaps(f)

clf(f);
f.Position(4) = 700;
f.Position(2) = f.Position(2)-200;
global p;
box_ellipsoid_percentage = uicontrol('Style', 'text', ...
    'String', 'Heatmaps', ...
    'HorizontalAlignment', 'center', ...
    'FontName', 'Arial', ...
    'FontSize', 20, ...
    'Position', [150, 660, 200, 30]);


box_dynamic_heatmapsize = uicontrol('Style', 'text', ...
    'String', 'Dynamic Heatmapsize:', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 610, 250, 30]);
checkbox_dynamic_heatmapsize = uicontrol('Style', 'checkbox', ...
    'Position', [250, 615, 30, 30], ...
    'Value', p.dynamicHeatmapsize, ...
    'Callback', @saving_callback_dynamic_heatmapsize);


box_gridsize = uicontrol('Style', 'text', ...
    'String', 'GridSize:', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 560, 250, 30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize));
editbox_gridsize_x = uicontrol('Style', 'edit', ...
    'String', p.gridSize(1), ...
    'Position', [250,560,50,30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);
editbox_gridsize_y = uicontrol('Style', 'edit', ...
    'String', p.gridSize(2), ...
    'Position', [300,560,50,30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);
editbox_gridsize_z = uicontrol('Style', 'edit', ...
    'String', p.gridSize(3), ...
    'Position', [350,560,50,30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);

box_base_gridsize = uicontrol('Style', 'text', ...
    'String', 'Base Gridsize', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 510, 250, 30], ...
    'Enable', intern_function_bool_to_on_off(p.dynamicHeatmapsize));
editbox_base_gridsize = uicontrol('Style', 'edit', ...
    'String', p.gridSizeBaseValue, ...
    'Position', [250,510,50,30], ...
    'Enable', intern_function_bool_to_on_off(p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);


box_shellheatmap_resolution = uicontrol('Style', 'text', ...
    'String', 'Shellheatmap Resolution:', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 460, 250, 30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize));
editbox_shellheatmap_resolution_x = uicontrol('Style', 'edit', ...
    'String', p.option.shellHeatmapResolution(1), ...
    'Position', [250,460,50,30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);
editbox_shellheatmap_resolution_y = uicontrol('Style', 'edit', ...
    'String', p.option.shellHeatmapResolution(2), ...
    'Position', [300,460,50,30], ...
    'Enable', intern_function_bool_to_on_off(~p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);

box_base_shellheatmap_resolution = uicontrol('Style', 'text', ...
    'String', 'Base Shellheatmap Resolution', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 410, 300, 30], ...
    'Enable', intern_function_bool_to_on_off(p.dynamicHeatmapsize));
editbox_base_shellheatmap_resolution = uicontrol('Style', 'edit', ...
    'String', p.option.shellHeatmapResolutionBaseValue, ...
    'Position', [300,410,50,30], ...
    'Enable', intern_function_bool_to_on_off(p.dynamicHeatmapsize), ...
    'Callback', @saving_callback);


box_heatmap_types = uicontrol('Style', 'text', ...
    'String', 'Heatmap Types:', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 360, 250, 30]);
checkbox_type_MIP = uicontrol('Style', 'checkbox', ...
    'String', 'MIP', ...
    'FontName', 'Arial', ...
    'FontSize', 10, ...
    'Position', [250, 365, 75, 30], ...
    'Value', any(strcmp(p.option.heatmaps.types, 'MIP')), ...
    'Callback', @saving_callback_types);
checkbox_type_SUM = uicontrol('Style', 'checkbox', ...
    'String', 'SUM', ...
    'FontName', 'Arial', ...
    'FontSize', 10, ...
    'Position', [350, 365, 75, 30], ...
    'Value', any(strcmp(p.option.heatmaps.types, 'SUM')), ...
    'Callback', @saving_callback_types);

box_heatmap_saveas = uicontrol('Style', 'text', ...
    'String', 'Save Heatmaps as:', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 310, 250, 30]);
checkbox_save_png = uicontrol('Style', 'checkbox', ...
    'String', '.png', ...
    'FontName', 'Arial', ...
    'FontSize', 10, ...
    'Position', [250, 315, 50, 30], ...
    'Value', any(strcmp(p.option.heatmaps.saveas, 'png')), ...
    'Callback', @saving_callback_saveas);
checkbox_save_fig = uicontrol('Style', 'checkbox', ...
    'String', '.fig', ...
    'FontName', 'Arial', ...
    'FontSize', 10, ...
    'Position', [350, 315, 50, 30], ...
    'Value', any(strcmp(p.option.heatmaps.saveas, 'fig')), ...
    'Callback', @saving_callback_saveas);

    
box_save_hmmat = uicontrol('Style', 'text', ...
    'String', 'Save HMmat File', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 260, 300, 30]);
checkbox_save_hmmat = uicontrol('Style', 'checkbox', ...
    'Position', [250, 265, 30, 30], ...
    'Value', p.option.heatmaps.saveHMmat, ...
    'Callback', @saving_callback);

box_save_acc = uicontrol('Style', 'text', ...
    'String', 'Save Accumulator File', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 210, 300, 30]);
checkbox_save_acc = uicontrol('Style', 'checkbox', ...
    'Position', [250, 215, 30, 30], ...
    'Value', p.option.heatmaps.saveAccumulator, ...
    'Callback', @saving_callback);

box_disp = uicontrol('Style', 'text', ...
    'String', 'Display Heatmaps', ...
    'HorizontalAlignment', 'left', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'Position', [10, 160, 300, 30]);
checkbox_disp = uicontrol('Style', 'checkbox', ...
    'Position', [250, 165, 30, 30], ...
    'Value', p.option.heatmaps.disp, ...
    'Callback', @saving_callback);

button_back = uicontrol('Style', 'pushbutton', ...
    'FontName', 'Arial', ...
    'FontSize', 15, ...
    'String', 'Back', ...
    'Position', [150, 50, 200, 50], ...
    'Callback', @button_back_callback);

%--------------------------------------------
%BUTTON FUNCTIONS
%--------------------------------------------
    function button_back_callback(source, eventdata)
        f.Position(4) = 500;
        f.Position(2) = f.Position(2) + 200;
        settings_gui_advanced(f);
    end

    function saving_callback_dynamic_heatmapsize(source, eventdata)
        p.dynamicHeatmapsize = checkbox_dynamic_heatmapsize.Value;
        if p.dynamicHeatmapsize
            box_gridsize.Enable = 'off';
            editbox_gridsize_x.Enable = 'off';
            editbox_gridsize_y.Enable = 'off';
            editbox_gridsize_z.Enable = 'off';
            box_base_gridsize.Enable = 'on';
            editbox_base_gridsize.Enable = 'on';
            
            box_shellheatmap_resolution.Enable = 'off';
            editbox_shellheatmap_resolution_x.Enable = 'off';
            editbox_shellheatmap_resolution_y.Enable = 'off';
            box_base_shellheatmap_resolution.Enable = 'on';
            editbox_base_shellheatmap_resolution.Enable = 'on';
        else
            box_gridsize.Enable = 'on';
            editbox_gridsize_x.Enable = 'on';
            editbox_gridsize_y.Enable = 'on';
            editbox_gridsize_z.Enable = 'on';
            box_base_gridsize.Enable = 'off';
            editbox_base_gridsize.Enable = 'off';
            
            box_shellheatmap_resolution.Enable = 'on';
            editbox_shellheatmap_resolution_x.Enable = 'on';
            editbox_shellheatmap_resolution_y.Enable = 'on';
            box_base_shellheatmap_resolution.Enable = 'off';
            editbox_base_shellheatmap_resolution.Enable = 'off';
        end
    end

    function saving_callback(source, eventdata)
        p.gridSize = [str2double(editbox_gridsize_x.String); str2double(editbox_gridsize_y.String); str2double(editbox_gridsize_z.String)];
        p.gridSizeBaseValue = str2double(editbox_base_gridsize.String);
        p.option.shellHeatmapResolution = [str2double(editbox_shellheatmap_resolution_x.String), str2double(editbox_shellheatmap_resolution_y.String)];
        p.option.shellHeatmapResolutionBaseValue = str2double(editbox_base_shellheatmap_resolution.String);
        
        p.option.heatmaps.saveHMmat = checkbox_save_hmmat.Value;
        p.option.heatmaps.saveAccumulator = checkbox_save_acc.Value;
        p.option.heatmaps.disp = checkbox_disp.Value;
    end

    function saving_callback_types(source, eventdata)
        if checkbox_type_MIP.Value
            if checkbox_type_SUM.Value
                p.option.heatmaps.types = {'MIP','SUM'};
            else
                p.option.heatmaps.types = {'MIP'};
            end
        elseif checkbox_type_SUM.Value
            p.option.heatmaps.types = {'SUM'};
        else
            p.option.heatmaps.types = {};
        end
    end

    function saving_callback_saveas(source, eventdata)
        if checkbox_save_png.Value
            if checkbox_save_fig.Value
                p.option.heatmaps.saveas = {'png','fig'};
            else
                p.option.heatmaps.saveas = {'png'};
            end
        elseif checkbox_save_fig.Value
            p.option.heatmaps.saveas = {'fig'};
        else
            p.option.heatmaps.saveas = {};
        end
    end

    function s = intern_function_bool_to_on_off(x)
        if x
            s = 'on';
        else
           s = 'off';
        end
    end
end

